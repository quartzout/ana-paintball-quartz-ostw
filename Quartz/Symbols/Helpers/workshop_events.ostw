import "../../match time/match_time.ostw";

void Loop(in Number delay, const () => void actions) {
    
    while(true) {
        actions();
        Wait(delay, WaitBehavior.IgnoreCondition);
    }
    
}

# Restarts the game immediately when match could be restarted, otherwise waits until match coluld be restarted and then restarts.
# Subroutine, and should be called asynchronously.
void RestartWhenPossible() "Restart when possible" {
    MinWait(); //for some reason waitUntil doesnt work without some wait before it ¯\_(ツ)_/¯ ¯\_(ツ)_/¯ ¯\_(ツ)_/¯ (╯°□°）╯︵ ┻━┻
    WaitUntil(MatchTime > 5, 9999);
    LogToInspector("Restarting");
    RestartMatch();
}

T CacheRef<T>(const () => T valueGetter, ref T cacheStore) {
    
    if (cacheStore == null) {
        cacheStore = valueGetter();
    }

    return cacheStore;
}

T CacheValue<T>(const () => T valueGetter, ref T cacheStore, T defaultValue) {
    
    if (cacheStore == defaultValue) {
        cacheStore = valueGetter();
    }

    return cacheStore;
}

